"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/keplr.tsx":
/*!****************************!*\
  !*** ./services/keplr.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectKeplr\": function() { return /* binding */ connectKeplr; }\n/* harmony export */ });\n/* harmony import */ var _home_chan_beb_decentralized_lotto_front_end_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _home_chan_beb_decentralized_lotto_front_end_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_home_chan_beb_decentralized_lotto_front_end_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util_conversion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util/conversion */ \"./util/conversion.tsx\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\n\n// https://docs.keplr.app/api/cosmjs.html 참고\nvar connectKeplr = function() {\n    var _ref = _asyncToGenerator(_home_chan_beb_decentralized_lotto_front_end_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var stakingDenom;\n        return _home_chan_beb_decentralized_lotto_front_end_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    if (!(!window.getOfflineSigner || !window.keplr)) {\n                        _ctx.next = 4;\n                        break;\n                    }\n                    {\n                        alert(\"Please install keplr extension\");\n                    }\n                    _ctx.next = 17;\n                    break;\n                case 4:\n                    if (!window.keplr.experimentalSuggestChain) {\n                        _ctx.next = 16;\n                        break;\n                    }\n                    stakingDenom = (0,util_conversion__WEBPACK_IMPORTED_MODULE_1__.convertFromMicroDenom)(\"utorii\" || 0);\n                    _ctx.prev = 6;\n                    _ctx.next = 9;\n                    return window.keplr.experimentalSuggestChain({\n                        // Cosmos SDK 체인의 Chain-id입니다.\n                        // Chain-id of the Cosmos SDK chain.\n                        chainId: \"torii-1\",\n                        // 사용자에게 표시할 체인의 이름입니다.\n                        // The name of the chain to be displayed to the user.\n                        chainName: \"Archway\",\n                        // Chain RPC endpoint\n                        rpc: \"https://rpc.torii-1.archway.tech:443\",\n                        // 체인의 REST 끝점.\n                        // REST endpoint of the chain.\n                        rest: \"https://api.torii-1.archway.tech:443\",\n                        // Staking coin information\n                        stakeCurrency: {\n                            // Coin denomination to be displayed to the user.\n                            // 사용자에게 표시할 코인 액면가.\n                            coinDenom: stakingDenom,\n                            // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n                            // 블록체인에서 사용하는 실제 명칭(예: uatom, uscrt).\n                            coinMinimalDenom: \"utorii\",\n                            // # of decimal points to convert minimal denomination to user-facing denomination.\n                            //\n                            // 최소 액면가를 사용자가 보는 액면가로 변환하는 소수점 이하 자릿수.\n                            coinDecimals: 6\n                        },\n                        // (Optional) If you have a wallet webpage used to stake the coin then provide the url to the website in `walletUrlForStaking`.\n                        // The 'stake' button in Keplr extension will link to the webpage.\n                        // walletUrlForStaking: \"\",\n                        // The BIP44 path.\n                        // (선택사항) 코인을 스테이킹하는 데 사용되는 지갑 웹페이지가 있는 경우 'walletUrlForStaking'에 웹사이트 URL을 제공합니다.\n                        // Kepl 확장 프로그램의 'stake' 버튼은 웹페이지로 연결됩니다.\n                        // walletUrlForStaking: \"\",\n                        // BIP44 경로.\n                        bip44: {\n                            // You can only set the coin type of BIP44.\n                            // 'Purpose' is fixed to 44.\n                            coinType: 118\n                        },\n                        // Bech32 configuration to show the address to user.\n                        bech32Config: {\n                            bech32PrefixAccAddr: \"archway\",\n                            bech32PrefixAccPub: \"\".concat(\"archway\", \"pub\"),\n                            bech32PrefixValAddr: \"\".concat(\"archway\", \"valoper\"),\n                            bech32PrefixValPub: \"\".concat(\"archway\", \"valoperpub\"),\n                            bech32PrefixConsAddr: \"\".concat(\"archway\", \"valcons\"),\n                            bech32PrefixConsPub: \"\".concat(\"archway\", \"valconspub\")\n                        },\n                        // List of all coin/tokens used in this chain.\n                        currencies: [\n                            {\n                                // Coin denomination to be displayed to the user.\n                                coinDenom: stakingDenom,\n                                // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n                                coinMinimalDenom: \"utorii\",\n                                // # of decimal points to convert minimal denomination to user-facing denomination.\n                                coinDecimals: 6\n                            }, \n                        ],\n                        // List of coin/tokens used as a fee token in this chain.\n                        feeCurrencies: [\n                            {\n                                // Coin denomination to be displayed to the user.\n                                coinDenom: stakingDenom,\n                                // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n                                coinMinimalDenom: \"utorii\",\n                                // # of decimal points to convert minimal denomination to user-facing denomination.\n                                coinDecimals: 6\n                            }, \n                        ],\n                        // (Optional) The number of the coin type.\n                        // This field is only used to fetch the address from ENS.\n                        // Ideally, it is recommended to be the same with BIP44 path's coin type.\n                        // However, some early chains may choose to use the Cosmos Hub BIP44 path of '118'.\n                        // So, this is separated to support such chains.\n                        coinType: 118,\n                        // (Optional) This is used to set the fee of the transaction.\n                        // If this field is not provided, Keplr extension will set the default gas price as (low: 0.01, average: 0.025, high: 0.04).\n                        // Currently, Keplr doesn't support dynamic calculation of the gas prices based on on-chain data.\n                        // Make sure that the gas prices are higher than the minimum gas prices accepted by chain validators and RPC/REST endpoint.\n                        gasPriceStep: {\n                            low: 0.01,\n                            average: 0.025,\n                            high: 0.04\n                        }\n                    });\n                case 9:\n                    _ctx.next = 14;\n                    break;\n                case 11:\n                    _ctx.prev = 11;\n                    _ctx.t0 = _ctx[\"catch\"](6);\n                    alert(\"Failed to suggest the chain\");\n                case 14:\n                    _ctx.next = 17;\n                    break;\n                case 16:\n                    {\n                        alert(\"Please use the recent version of keplr extension\");\n                    }\n                case 17:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                6,\n                11\n            ]\n        ]);\n    }));\n    return function connectKeplr() {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/keplr.tsx\n");

/***/ })

});