{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2","program":"/Users/gyu/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=22b90d2a37c6901d","-C","extra-filename=-22b90d2a37c6901d","--out-dir","/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps","-L","dependency=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps","--extern","cosmwasm_std=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libcosmwasm_std-24beb135b09315da.rmeta","--extern","schemars=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libschemars-36272cafac29572d.rmeta","--extern","serde=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libserde-747a6905d55855b1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/gyu/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libcw_storage_plus-22b90d2a37c6901d.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[2519659904628308314,0]},"crate_root":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src","external_crates":[{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[12483254013991230975,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":21,"id":{"name":"schemars","disambiguator":[5355021184117889176,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[18028502778818760978,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":23,"id":{"name":"serde_json","disambiguator":[12750025606930948330,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","num":24,"id":{"name":"serde","disambiguator":[10575022463751950825,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","num":25,"id":{"name":"serde_derive","disambiguator":[11943785593544002344,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":26,"id":{"name":"itoa","disambiguator":[887862156189091988,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":27,"id":{"name":"ryu","disambiguator":[7921103640808690109,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":28,"id":{"name":"dyn_clone","disambiguator":[6108590377966493837,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":29,"id":{"name":"cosmwasm_crypto","disambiguator":[10116761444692606781,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":30,"id":{"name":"ed25519_zebra","disambiguator":[4610399512962556792,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":31,"id":{"name":"curve25519_dalek","disambiguator":[10407866955938490822,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":32,"id":{"name":"byteorder","disambiguator":[17911754248048279357,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":33,"id":{"name":"digest","disambiguator":[2009845887212326786,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":34,"id":{"name":"generic_array","disambiguator":[15276838277917897181,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":35,"id":{"name":"typenum","disambiguator":[9985697950693171865,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":36,"id":{"name":"rand_core","disambiguator":[13000368750798225955,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":37,"id":{"name":"getrandom","disambiguator":[5256209661575371231,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":38,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":39,"id":{"name":"libc","disambiguator":[10690845834420505743,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":40,"id":{"name":"zeroize","disambiguator":[9695664952874827084,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":41,"id":{"name":"subtle","disambiguator":[4011068292210658166,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":42,"id":{"name":"rand_core","disambiguator":[4814517775208316677,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":43,"id":{"name":"getrandom","disambiguator":[1311169205642726318,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":44,"id":{"name":"sha2","disambiguator":[9054832524722735686,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":45,"id":{"name":"block_buffer","disambiguator":[8855761083246766863,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":46,"id":{"name":"opaque_debug","disambiguator":[13756650532803067930,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":47,"id":{"name":"thiserror","disambiguator":[15636651487099787656,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":48,"id":{"name":"thiserror_impl","disambiguator":[13829727757351825240,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":49,"id":{"name":"hex","disambiguator":[15615996601516406114,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":50,"id":{"name":"k256","disambiguator":[14299200446315139935,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":51,"id":{"name":"elliptic_curve","disambiguator":[5665369298276345993,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":52,"id":{"name":"crypto_bigint","disambiguator":[8032669681949913678,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":53,"id":{"name":"group","disambiguator":[16059020819858633460,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":54,"id":{"name":"ff","disambiguator":[883279298571564893,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":55,"id":{"name":"sec1","disambiguator":[15661152985718567893,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":56,"id":{"name":"der","disambiguator":[17239868865594793851,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":57,"id":{"name":"const_oid","disambiguator":[1816347806600932989,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":58,"id":{"name":"pkcs8","disambiguator":[9484902399634728706,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":59,"id":{"name":"spki","disambiguator":[9451724014027412107,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":60,"id":{"name":"base16ct","disambiguator":[3654153521453572287,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":61,"id":{"name":"ecdsa","disambiguator":[15363353126161656943,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":62,"id":{"name":"signature","disambiguator":[9538508499260140170,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":63,"id":{"name":"rfc6979","disambiguator":[3596576938354273592,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":64,"id":{"name":"hmac","disambiguator":[3005179460937206584,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":65,"id":{"name":"crypto_mac","disambiguator":[17250242286904854767,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":66,"id":{"name":"forward_ref","disambiguator":[1061106066326905708,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":67,"id":{"name":"cosmwasm_derive","disambiguator":[206067841641789162,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":68,"id":{"name":"uint","disambiguator":[15326258502438127338,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":69,"id":{"name":"static_assertions","disambiguator":[18196514925109496739,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":70,"id":{"name":"crunchy","disambiguator":[3021396866000478149,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":71,"id":{"name":"base64","disambiguator":[7606923461599355482,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","num":72,"id":{"name":"serde_json_wasm","disambiguator":[13847992461651870378,0]}}],"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":0,"byte_end":1055,"line_start":1,"line_end":42,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110043,"byte_end":110053,"line_start":6,"line_end":6,"column_start":16,"column_end":26},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110071,"byte_end":110082,"line_start":7,"line_end":7,"column_start":17,"column_end":28},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":232466,"byte_end":232478,"line_start":5,"line_end":5,"column_start":15,"column_end":27},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":1398}},{"kind":"Use","ref_id":{"krate":0,"index":1518},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":232493,"byte_end":232504,"line_start":6,"line_end":6,"column_start":14,"column_end":25},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":1398}},{"kind":"Use","ref_id":{"krate":0,"index":1741},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":264,"byte_end":269,"line_start":20,"line_end":20,"column_start":17,"column_end":22},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":271,"byte_end":278,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"Bounder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":280,"byte_end":291,"line_start":20,"line_end":20,"column_start":33,"column_end":44},"alias_span":null,"name":"PrefixBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":293,"byte_end":301,"line_start":20,"line_end":20,"column_start":46,"column_end":54},"alias_span":null,"name":"RawBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":316,"byte_end":330,"line_start":21,"line_end":21,"column_start":13,"column_end":27},"alias_span":null,"name":"KeyDeserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":348,"byte_end":354,"line_start":22,"line_end":22,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":407,"byte_end":416,"line_start":24,"line_end":24,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":418,"byte_end":428,"line_start":24,"line_end":24,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":486,"byte_end":504,"line_start":26,"line_end":26,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":552,"byte_end":562,"line_start":28,"line_end":28,"column_start":18,"column_end":28},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":610,"byte_end":621,"line_start":30,"line_end":30,"column_start":18,"column_end":29},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":670,"byte_end":682,"line_start":32,"line_end":32,"column_start":19,"column_end":31},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":684,"byte_end":702,"line_start":32,"line_end":32,"column_start":33,"column_end":51},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":704,"byte_end":716,"line_start":32,"line_end":32,"column_start":53,"column_end":65},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":718,"byte_end":729,"line_start":32,"line_end":32,"column_start":67,"column_end":78},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":731,"byte_end":736,"line_start":32,"line_end":32,"column_start":80,"column_end":85},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":756,"byte_end":764,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"alias_span":null,"name":"CwIntKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":780,"byte_end":784,"line_start":34,"line_end":34,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2070},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":801,"byte_end":804,"line_start":35,"line_end":35,"column_start":16,"column_end":19},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":806,"byte_end":814,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":816,"byte_end":826,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2198},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":847,"byte_end":856,"line_start":36,"line_end":36,"column_start":19,"column_end":28},"alias_span":null,"name":"IntKeyOld","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2219},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":871,"byte_end":874,"line_start":37,"line_end":37,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2236},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":890,"byte_end":894,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1378},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":942,"byte_end":959,"line_start":40,"line_end":40,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2246},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":961,"byte_end":967,"line_start":40,"line_end":40,"column_start":37,"column_end":43},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":1018,"byte_end":1030,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1518},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":1032,"byte_end":1043,"line_start":42,"line_end":42,"column_start":34,"column_end":45},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2277},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":1045,"byte_end":1053,"line_start":42,"line_end":42,"column_start":47,"column_end":55},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","byte_start":0,"byte_end":1055,"line_start":1,"line_end":42,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":82},{"krate":0,"index":147},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":238},{"krate":0,"index":357},{"krate":0,"index":487},{"krate":0,"index":786},{"krate":0,"index":796},{"krate":0,"index":860},{"krate":0,"index":888},{"krate":0,"index":1022},{"krate":0,"index":1078},{"krate":0,"index":1207},{"krate":0,"index":1262},{"krate":0,"index":1398},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1672,"byte_end":1681,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::RawBound::Inclusive","value":"RawBound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1696,"byte_end":1705,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::RawBound::Exclusive","value":"RawBound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1657,"byte_end":1665,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"RawBound","qualname":"::bound::RawBound","value":"pub enum RawBound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1734}],"decl_id":null,"docs":" `RawBound` is used to define the two ends of a range, more explicit than `Option<u8>`.\n `None` means that we don't limit that side of the range at all.\n `Inclusive` means we use the given bytes as a limit and *include* anything at that exact key.\n `Exclusive` means we use the given bytes as a limit and *exclude* anything at that exact key.\n See `Bound` for a type safe way to build these bounds.\n","sig":null,"attributes":[{"value":"/ `RawBound` is used to define the two ends of a range, more explicit than `Option<u8>`.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1210,"byte_end":1300,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ `None` means that we don't limit that side of the range at all.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1301,"byte_end":1368,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ `Inclusive` means we use the given bytes as a limit and *include* anything at that exact key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1369,"byte_end":1466,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ `Exclusive` means we use the given bytes as a limit and *exclude* anything at that exact key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1467,"byte_end":1564,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ See `Bound` for a type safe way to build these bounds.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1565,"byte_end":1623,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2106,"byte_end":2115,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::Bound::Inclusive","value":"Bound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2149,"byte_end":2158,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::Bound::Exclusive","value":"Bound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2192,"byte_end":2204,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"InclusiveRaw","qualname":"::bound::Bound::InclusiveRaw","value":"Bound::InclusiveRaw(Vec<u8>)","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2219,"byte_end":2231,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"ExclusiveRaw","qualname":"::bound::Bound::ExclusiveRaw","value":"Bound::ExclusiveRaw(Vec<u8>)","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2071,"byte_end":2076,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Bound","qualname":"::bound::Bound","value":"pub enum Bound<'a, K: PrimaryKey> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n    InclusiveRaw(Vec<u8>),\n    ExclusiveRaw(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753}],"decl_id":null,"docs":" `Bound` is used to define the two ends of a range.\n `None` means that we don't limit that side of the range at all.\n `Inclusive` means we use the given value as a limit and *include* anything at that exact key.\n `Exclusive` means we use the given value as a limit and *exclude* anything at that exact key.\n","sig":null,"attributes":[{"value":"/ `Bound` is used to define the two ends of a range.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1719,"byte_end":1773,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/ `None` means that we don't limit that side of the range at all.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1774,"byte_end":1841,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ `Inclusive` means we use the given value as a limit and *include* anything at that exact key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1842,"byte_end":1939,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ `Exclusive` means we use the given value as a limit and *exclude* anything at that exact key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":1940,"byte_end":2037,"line_start":23,"line_end":23,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2299,"byte_end":2308,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2404,"byte_end":2413,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2509,"byte_end":2521,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"to_raw_bound","qualname":"<Bound>::to_raw_bound","value":"pub fn to_raw_bound(&Self) -> RawBound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1767},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2965,"byte_end":2974,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::PrefixBound::Inclusive","value":"PrefixBound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3008,"byte_end":3017,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::PrefixBound::Exclusive","value":"PrefixBound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2926,"byte_end":2937,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"PrefixBound","qualname":"::bound::PrefixBound","value":"pub enum PrefixBound<'a, K: Prefixer> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n}","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3108,"byte_end":3117,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<PrefixBound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3213,"byte_end":3222,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<PrefixBound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3318,"byte_end":3330,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"to_raw_bound","qualname":"<PrefixBound>::to_raw_bound","value":"pub fn to_raw_bound(&Self) -> RawBound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3574,"byte_end":3581,"line_start":74,"line_end":74,"column_start":11,"column_end":18},"name":"Bounder","qualname":"::bound::Bounder","value":"Bounder<'a>: PrimaryKey + Sized","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3619,"byte_end":3634,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"inclusive_bound","qualname":"::bound::Bounder::inclusive_bound","value":"pub fn inclusive_bound(Self) -> Option<Bound>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3676,"byte_end":3691,"line_start":76,"line_end":76,"column_start":8,"column_end":23},"name":"exclusive_bound","qualname":"::bound::Bounder::exclusive_bound","value":"pub fn exclusive_bound(Self) -> Option<Bound>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":6730,"byte_end":6744,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"KeyDeserialize","qualname":"::de::KeyDeserialize","value":"KeyDeserialize","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":6756,"byte_end":6762,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Output","qualname":"::de::KeyDeserialize::Output","value":"type Output: Sized;","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":6779,"byte_end":6787,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::de::KeyDeserialize::from_vec","value":"pub fn from_vec(Vec<u8>) -> StdResult<Self::Output>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":6840,"byte_end":6850,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::KeyDeserialize::from_slice","value":"pub fn from_slice(&[u8]) -> StdResult<Self::Output>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17788,"byte_end":17794,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17820,"byte_end":17823,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17886,"byte_end":17897,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17925,"byte_end":17936,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17965,"byte_end":17978,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":18013,"byte_end":18026,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":25947,"byte_end":25956,"line_start":17,"line_end":17,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":25969,"byte_end":25980,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26174,"byte_end":26184,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" `IndexedMap` works like a `Map` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedMap` works like a `Map` but has a secondary index","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26101,"byte_end":26162,"line_start":22,"line_end":22,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26465,"byte_end":26468,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26355,"byte_end":26423,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26428,"byte_end":26456,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26685,"byte_end":26688,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26905,"byte_end":26908,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27386,"byte_end":27390,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27115,"byte_end":27201,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27206,"byte_end":27269,"line_start":63,"line_end":63,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27274,"byte_end":27374,"line_start":64,"line_end":64,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27601,"byte_end":27607,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":28054,"byte_end":28061,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27795,"byte_end":27891,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27896,"byte_end":27983,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":27988,"byte_end":28042,"line_start":77,"line_end":77,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29051,"byte_end":29057,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":28773,"byte_end":28843,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":28848,"byte_end":28934,"line_start":104,"line_end":104,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":28939,"byte_end":28942,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":28947,"byte_end":29039,"line_start":106,"line_end":106,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29692,"byte_end":29696,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29597,"byte_end":29680,"line_start":122,"line_end":122,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29952,"byte_end":29960,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29800,"byte_end":29897,"line_start":127,"line_end":127,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":29902,"byte_end":29940,"line_start":128,"line_end":128,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30815,"byte_end":30831,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<IndexedMap>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30390,"byte_end":30481,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30486,"byte_end":30586,"line_start":147,"line_end":147,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30591,"byte_end":30684,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30689,"byte_end":30783,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30788,"byte_end":30803,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31473,"byte_end":31483,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31625,"byte_end":31631,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32365,"byte_end":32377,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31940,"byte_end":32027,"line_start":191,"line_end":191,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32032,"byte_end":32119,"line_start":192,"line_end":192,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32124,"byte_end":32210,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32215,"byte_end":32234,"line_start":194,"line_end":194,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32239,"byte_end":32333,"line_start":195,"line_end":195,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32338,"byte_end":32353,"line_start":196,"line_end":196,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":32893,"byte_end":32902,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":33248,"byte_end":33256,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":33545,"byte_end":33550,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":33907,"byte_end":33911,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c>\nwhere T: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73241,"byte_end":73259,"line_start":17,"line_end":17,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73152,"byte_end":73229,"line_start":16,"line_end":16,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73453,"byte_end":73456,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73343,"byte_end":73411,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73416,"byte_end":73444,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74091,"byte_end":74094,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Examples:","sig":null,"attributes":[{"value":"/ Examples:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73520,"byte_end":73533,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73538,"byte_end":73541,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73546,"byte_end":73557,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{IndexedSnapshotMap, Strategy, UniqueIndex};","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73562,"byte_end":73631,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73636,"byte_end":73639,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ #[derive(PartialEq, Debug, Clone)]","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73644,"byte_end":73682,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/ struct Data {","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73687,"byte_end":73704,"line_start":32,"line_end":32,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73709,"byte_end":73734,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73739,"byte_end":73760,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73765,"byte_end":73770,"line_start":35,"line_end":35,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73775,"byte_end":73778,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let indexes = UniqueIndex::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73783,"byte_end":73849,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73854,"byte_end":73857,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ IndexedSnapshotMap::<&[u8], Data, UniqueIndex<u32, Data>>::new(","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73862,"byte_end":73929,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/     \"data\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73934,"byte_end":73949,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/     \"checkpoints\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73954,"byte_end":73976,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/     \"changelog\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73981,"byte_end":74001,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/     Strategy::EveryBlock,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74006,"byte_end":74035,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/     indexes,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74040,"byte_end":74056,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74061,"byte_end":74067,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74072,"byte_end":74079,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74470,"byte_end":74479,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"changelog","qualname":"<IndexedSnapshotMap>::changelog","value":"pub fn changelog(&Self) -> &Map","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74757,"byte_end":74771,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74905,"byte_end":74922,"line_start":76,"line_end":76,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75059,"byte_end":75077,"line_start":80,"line_end":80,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75266,"byte_end":75285,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75420,"byte_end":75423,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75941,"byte_end":75945,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75670,"byte_end":75756,"line_start":104,"line_end":104,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75761,"byte_end":75824,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75829,"byte_end":75929,"line_start":106,"line_end":106,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":76177,"byte_end":76183,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":76651,"byte_end":76658,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":76392,"byte_end":76488,"line_start":117,"line_end":117,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":76493,"byte_end":76580,"line_start":118,"line_end":118,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":76585,"byte_end":76639,"line_start":119,"line_end":119,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":77686,"byte_end":77692,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":77408,"byte_end":77478,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":77483,"byte_end":77569,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":77574,"byte_end":77577,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":77582,"byte_end":77674,"line_start":149,"line_end":149,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78395,"byte_end":78399,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78300,"byte_end":78383,"line_start":171,"line_end":171,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78655,"byte_end":78663,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78503,"byte_end":78600,"line_start":176,"line_end":176,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78605,"byte_end":78643,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":78824,"byte_end":78837,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"no_prefix_raw","qualname":"<IndexedSnapshotMap>::no_prefix_raw","value":"pub fn no_prefix_raw(&Self) -> Prefix<Vec<u8>, T, K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":79330,"byte_end":79339,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedSnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":79685,"byte_end":79693,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedSnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80160,"byte_end":80170,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80312,"byte_end":80318,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":81060,"byte_end":81072,"line_start":250,"line_end":250,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedSnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80635,"byte_end":80722,"line_start":244,"line_end":244,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80727,"byte_end":80814,"line_start":245,"line_end":245,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80819,"byte_end":80905,"line_start":246,"line_end":246,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80910,"byte_end":80929,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80934,"byte_end":81028,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":81033,"byte_end":81048,"line_start":249,"line_end":249,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":81588,"byte_end":81593,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":81950,"byte_end":81954,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedSnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c>\nwhere T: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112140,"byte_end":112150,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::multi::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111481,"byte_end":111555,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111556,"byte_end":111608,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111609,"byte_end":111687,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111688,"byte_end":111744,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111745,"byte_end":111748,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111749,"byte_end":111834,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111835,"byte_end":111900,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111901,"byte_end":111904,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The PK type defines the type of Primary Key, both for deserialization, and","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111905,"byte_end":111983,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ more important, type-safe bound key type.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":111984,"byte_end":112029,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ This type must match the encompassing `IndexedMap` primary key type,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112030,"byte_end":112102,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ or its owned variant.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112103,"byte_end":112128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113212,"byte_end":113215,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new MultiIndex","sig":null,"attributes":[{"value":"/ Create a new MultiIndex","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112558,"byte_end":112585,"line_start":44,"line_end":44,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112590,"byte_end":112593,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from value","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112598,"byte_end":112647,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ pk_namespace - prefix for the primary key","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112652,"byte_end":112697,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112702,"byte_end":112748,"line_start":48,"line_end":48,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112753,"byte_end":112756,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112761,"byte_end":112776,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112781,"byte_end":112784,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112789,"byte_end":112800,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::MultiIndex;","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112805,"byte_end":112841,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112846,"byte_end":112886,"line_start":54,"line_end":54,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112891,"byte_end":112894,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, Serialize, Clone)]","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112899,"byte_end":112943,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ struct Data {","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112948,"byte_end":112965,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112970,"byte_end":112995,"line_start":58,"line_end":58,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113000,"byte_end":113021,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113026,"byte_end":113031,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113036,"byte_end":113039,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let index: MultiIndex<_, _, String> = MultiIndex::new(","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113044,"byte_end":113102,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/     |d: &Data| d.age,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113107,"byte_end":113132,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/     \"age\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113137,"byte_end":113151,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/     \"age__owner\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113156,"byte_end":113177,"line_start":65,"line_end":65,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113182,"byte_end":113188,"line_start":66,"line_end":66,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":113193,"byte_end":113200,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":115991,"byte_end":116000,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":117176,"byte_end":117185,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<MultiIndex>::range_raw","value":"pub fn range_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":117520,"byte_end":117528,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<MultiIndex>::keys_raw","value":"pub fn keys_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118246,"byte_end":118262,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<MultiIndex>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&'c Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":117813,"byte_end":117904,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":117909,"byte_end":118000,"line_start":227,"line_end":227,"column_start":5,"column_end":96}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118005,"byte_end":118091,"line_start":228,"line_end":228,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118096,"byte_end":118115,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118120,"byte_end":118214,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118219,"byte_end":118234,"line_start":231,"line_end":231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118983,"byte_end":118989,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, IK) -> Prefix<PK, T, PK>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119267,"byte_end":119277,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::Prefix) -> Prefix<PK, T, (IK::Suffix, PK)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":120222,"byte_end":120234,"line_start":290,"line_end":290,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<MultiIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119797,"byte_end":119884,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119889,"byte_end":119976,"line_start":285,"line_end":285,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119981,"byte_end":120067,"line_start":286,"line_end":286,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":120072,"byte_end":120091,"line_start":287,"line_end":287,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":120096,"byte_end":120190,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":120195,"byte_end":120210,"line_start":289,"line_end":289,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":120757,"byte_end":120762,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":121135,"byte_end":121139,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c>\nwhere T: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122780,"byte_end":122791,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::unique::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n The optional PK type defines the type of Primary Key deserialization.\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122553,"byte_end":122626,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122627,"byte_end":122694,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ The optional PK type defines the type of Primary Key deserialization.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122695,"byte_end":122768,"line_start":28,"line_end":28,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123466,"byte_end":123469,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new UniqueIndex","sig":null,"attributes":[{"value":"/ Create a new UniqueIndex","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123028,"byte_end":123056,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123061,"byte_end":123064,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from index value","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123069,"byte_end":123124,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123129,"byte_end":123175,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123180,"byte_end":123183,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123188,"byte_end":123203,"line_start":43,"line_end":43,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123208,"byte_end":123211,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123216,"byte_end":123227,"line_start":45,"line_end":45,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::UniqueIndex;","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123232,"byte_end":123269,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123274,"byte_end":123277,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ struct Data {","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123282,"byte_end":123299,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123304,"byte_end":123329,"line_start":49,"line_end":49,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123334,"byte_end":123355,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123360,"byte_end":123365,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123370,"byte_end":123373,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ UniqueIndex::<_, _, ()>::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123378,"byte_end":123442,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123447,"byte_end":123454,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125187,"byte_end":125196,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125632,"byte_end":125636,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, IK) -> StdResult<Option<Record<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125543,"byte_end":125620,"line_start":126,"line_end":126,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":126210,"byte_end":126219,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<UniqueIndex>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":126539,"byte_end":126547,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<UniqueIndex>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127438,"byte_end":127450,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<UniqueIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127013,"byte_end":127100,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127105,"byte_end":127192,"line_start":176,"line_end":176,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127197,"byte_end":127283,"line_start":177,"line_end":177,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127288,"byte_end":127307,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127312,"byte_end":127406,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127411,"byte_end":127426,"line_start":180,"line_end":180,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":127989,"byte_end":127994,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":128355,"byte_end":128359,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c>\nwhere T: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":128714,"byte_end":128720,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, IK::Prefix) -> Prefix<PK, T, IK::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":129032,"byte_end":129042,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::SubPrefix) -> Prefix<PK, T, IK::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110189,"byte_end":110201,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":779},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110266,"byte_end":110277,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110360,"byte_end":110372,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, u32, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110481,"byte_end":110499,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":782},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110729,"byte_end":110734,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110798,"byte_end":110802,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/mod.rs","byte_start":110881,"byte_end":110887,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":790},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130021,"byte_end":130029,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"CwIntKey","qualname":"::int_key::CwIntKey","value":"CwIntKey: Sized + Copy","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Our int keys are simply the big-endian representation bytes for unsigned ints,\n but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","sig":null,"attributes":[{"value":"/ Our int keys are simply the big-endian representation bytes for unsigned ints,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":129654,"byte_end":129736,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/ but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":129737,"byte_end":129805,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":129806,"byte_end":129809,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ So that the representation of signed integers is in the right lexicographical order.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":129810,"byte_end":129898,"line_start":6,"line_end":6,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":791},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130055,"byte_end":130058,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Buf","qualname":"::int_key::CwIntKey::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130121,"byte_end":130132,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"to_cw_bytes","qualname":"::int_key::CwIntKey::to_cw_bytes","value":"pub fn to_cw_bytes(&Self) -> Self::Buf","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130161,"byte_end":130174,"line_start":12,"line_end":12,"column_start":8,"column_end":21},"name":"from_cw_bytes","qualname":"::int_key::CwIntKey::from_cw_bytes","value":"pub fn from_cw_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":133916,"byte_end":133920,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":133732,"byte_end":133780,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":133781,"byte_end":133816,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":133817,"byte_end":133904,"line_start":13,"line_end":13,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134230,"byte_end":134233,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134520,"byte_end":134528,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134680,"byte_end":134684,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134583,"byte_end":134668,"line_start":39,"line_end":39,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134832,"byte_end":134838,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135019,"byte_end":135023,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134924,"byte_end":135007,"line_start":49,"line_end":49,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135317,"byte_end":135325,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135163,"byte_end":135262,"line_start":55,"line_end":55,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135267,"byte_end":135305,"line_start":56,"line_end":56,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135779,"byte_end":135785,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135472,"byte_end":135542,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135547,"byte_end":135633,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135638,"byte_end":135641,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135646,"byte_end":135746,"line_start":65,"line_end":65,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":135751,"byte_end":135767,"line_start":66,"line_end":66,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":136345,"byte_end":136350,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"query","qualname":"<Item>::query","value":"pub fn query<Q: CustomQuery>(&Self, &QuerierWrapper<, Q>, Addr)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Item from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery.","sig":null,"attributes":[{"value":"/ If you import the proper Item from the remote contract, this will let you read the data","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":136074,"byte_end":136165,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":136170,"byte_end":136242,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":136247,"byte_end":136250,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that we expect an Item to be set, and error if there is no data there","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":136255,"byte_end":136333,"line_start":81,"line_end":81,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151122,"byte_end":151125,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"Ref","qualname":"::keys::Key::Ref","value":"Key::Ref(&'a [u8])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151141,"byte_end":151145,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Val8","qualname":"::keys::Key::Val8","value":"Key::Val8([u8; ])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151160,"byte_end":151165,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Val16","qualname":"::keys::Key::Val16","value":"Key::Val16([u8; ])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151180,"byte_end":151185,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Val32","qualname":"::keys::Key::Val32","value":"Key::Val32([u8; ])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151200,"byte_end":151205,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Val64","qualname":"::keys::Key::Val64","value":"Key::Val64([u8; ])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151220,"byte_end":151226,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Val128","qualname":"::keys::Key::Val128","value":"Key::Val128([u8; ])","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151108,"byte_end":151111,"line_start":8,"line_end":8,"column_start":10,"column_end":13},"name":"Key","qualname":"::keys::Key","value":"pub enum Key<'a> {\n    Ref(&'a [u8]),\n    Val8([u8; ]),\n    Val16([u8; ]),\n    Val32([u8; ]),\n    Val64([u8; ]),\n    Val128([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2079},{"krate":0,"index":2083},{"krate":0,"index":2087},{"krate":0,"index":2091}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":907},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152475,"byte_end":152485,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"decl_id":null,"docs":" `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,\n or part of a key.","sig":null,"attributes":[{"value":"/ `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151661,"byte_end":151756,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ or part of a key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151757,"byte_end":151778,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151779,"byte_end":151782,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In particular, it defines a series of types that help iterating over parts of a (composite) key:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151783,"byte_end":151883,"line_start":39,"line_end":39,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151884,"byte_end":151887,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `Prefix`: Prefix is eager. That is, except for empty keys, it's always \"one less\" than the full key.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151888,"byte_end":151992,"line_start":41,"line_end":41,"column_start":1,"column_end":105}},{"value":"/ `Suffix`: Suffix is the complement of prefix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151993,"byte_end":152042,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/ `SubPrefix`: Sub-prefix is \"one less\" than prefix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152043,"byte_end":152097,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ `SuperSuffix`: Super-suffix is \"one more\" than suffix. The complement of sub-prefix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152098,"byte_end":152186,"line_start":44,"line_end":44,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152187,"byte_end":152190,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ By example, for a 2-tuple `(T, U)`:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152191,"byte_end":152230,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152231,"byte_end":152234,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ `T`: Prefix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152235,"byte_end":152251,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ `U`: Suffix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152252,"byte_end":152268,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ `()`: Sub-prefix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152269,"byte_end":152290,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ `(T, U)`: Super-suffix.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152291,"byte_end":152318,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152319,"byte_end":152322,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ `SubPrefix` and `SuperSuffix` only make real sense in the case of triples. Still, they need to be","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152323,"byte_end":152424,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ consistently defined for all types.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152425,"byte_end":152464,"line_start":54,"line_end":54,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":909},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152685,"byte_end":152691,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" These associated types need to implement `Prefixer`, so that they can be useful arguments\n for `prefix()`, `sub_prefix()`, and their key-deserializable variants.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `Prefixer`, so that they can be useful arguments","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152503,"byte_end":152596,"line_start":56,"line_end":56,"column_start":5,"column_end":98}},{"value":"/ for `prefix()`, `sub_prefix()`, and their key-deserializable variants.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152601,"byte_end":152675,"line_start":57,"line_end":57,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":910},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152716,"byte_end":152725,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":911},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152886,"byte_end":152892,"line_start":63,"line_end":63,"column_start":10,"column_end":16},"name":"Suffix","qualname":"::keys::PrimaryKey::Suffix","value":"type Suffix: KeyDeserialize;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" These associated types need to implement `KeyDeserialize`, so that they can be returned from\n `range_de()` and friends.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `KeyDeserialize`, so that they can be returned from","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152746,"byte_end":152842,"line_start":61,"line_end":61,"column_start":5,"column_end":101}},{"value":"/ `range_de()` and friends.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152847,"byte_end":152876,"line_start":62,"line_end":62,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":912},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152919,"byte_end":152930,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"name":"SuperSuffix","qualname":"::keys::PrimaryKey::SuperSuffix","value":"type SuperSuffix: KeyDeserialize;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":153027,"byte_end":153030,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<Key>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152953,"byte_end":153019,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":153059,"byte_end":153069,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":153309,"byte_end":153325,"line_start":78,"line_end":78,"column_start":8,"column_end":24},"name":"joined_extra_key","qualname":"::keys::PrimaryKey::joined_extra_key","value":"pub fn joined_extra_key(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":956},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":155279,"byte_end":155287,"line_start":158,"line_end":158,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":155405,"byte_end":155411,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<Key>","parent":{"krate":0,"index":956},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should be length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should be length-prefixed and concatenated for range searches","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":155298,"byte_end":155397,"line_start":159,"line_end":159,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":155440,"byte_end":155453,"line_start":162,"line_end":162,"column_start":8,"column_end":21},"name":"joined_prefix","qualname":"::keys::Prefixer::joined_prefix","value":"pub fn joined_prefix(&Self) -> Vec<u8>","parent":{"krate":0,"index":956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165572,"byte_end":165581,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"IntKeyOld","qualname":"::keys_old::IntKeyOld","value":"IntKeyOld { wrapped, data }","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165603,"byte_end":165610,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys_old::IntKeyOld::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165629,"byte_end":165633,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"data","qualname":"::keys_old::IntKeyOld::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165696,"byte_end":165699,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKeyOld<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":168486,"byte_end":168489,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":168757,"byte_end":168760,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":168949,"byte_end":168958,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Map>::namespace","value":"pub fn namespace(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169120,"byte_end":169123,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169438,"byte_end":169442,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169566,"byte_end":169572,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169753,"byte_end":169757,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169658,"byte_end":169741,"line_start":67,"line_end":67,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170005,"byte_end":170013,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169853,"byte_end":169950,"line_start":72,"line_end":72,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169955,"byte_end":169993,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170244,"byte_end":170247,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170121,"byte_end":170214,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170219,"byte_end":170232,"line_start":79,"line_end":79,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170612,"byte_end":170618,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170334,"byte_end":170404,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170409,"byte_end":170495,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170500,"byte_end":170503,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170508,"byte_end":170600,"line_start":87,"line_end":87,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171010,"byte_end":171015,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"query","qualname":"<Map>::query","value":"pub fn query<Q: CustomQuery>(&Self, &QuerierWrapper<, Q>, Addr, K)\n-> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Map from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery\n","sig":null,"attributes":[{"value":"/ If you import the proper Map from the remote contract, this will let you read the data","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170832,"byte_end":170922,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":170927,"byte_end":170998,"line_start":97,"line_end":97,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171543,"byte_end":171553,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171692,"byte_end":171698,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172540,"byte_end":172556,"line_start":143,"line_end":143,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<Map>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172115,"byte_end":172206,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172211,"byte_end":172311,"line_start":139,"line_end":139,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172316,"byte_end":172409,"line_start":140,"line_end":140,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172414,"byte_end":172508,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":172513,"byte_end":172528,"line_start":142,"line_end":142,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173588,"byte_end":173600,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<Map>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173163,"byte_end":173250,"line_start":166,"line_end":166,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173255,"byte_end":173342,"line_start":167,"line_end":167,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173347,"byte_end":173433,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173438,"byte_end":173457,"line_start":169,"line_end":169,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173462,"byte_end":173556,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173561,"byte_end":173576,"line_start":171,"line_end":171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":174334,"byte_end":174343,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Map>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":174689,"byte_end":174697,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Map>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":175160,"byte_end":175165,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":175522,"byte_end":175526,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c>\nwhere T: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":215858,"byte_end":215862,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216391,"byte_end":216394,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216945,"byte_end":216949,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216848,"byte_end":216933,"line_start":53,"line_end":53,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217098,"byte_end":217104,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217286,"byte_end":217290,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217191,"byte_end":217274,"line_start":63,"line_end":63,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217583,"byte_end":217591,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217431,"byte_end":217528,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217533,"byte_end":217571,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217958,"byte_end":217961,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217739,"byte_end":217832,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":217837,"byte_end":217946,"line_start":77,"line_end":77,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":218336,"byte_end":218342,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":218058,"byte_end":218128,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":218133,"byte_end":218219,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":218224,"byte_end":218227,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":218232,"byte_end":218324,"line_start":85,"line_end":85,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":219693,"byte_end":219699,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220426,"byte_end":220429,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<K, T, B>>::new","value":"pub fn new(&[u8], &[Key]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220695,"byte_end":220725,"line_start":79,"line_end":79,"column_start":12,"column_end":42},"name":"with_deserialization_functions","qualname":"<Prefix<K, T, B>>::with_deserialization_functions","value":"pub fn with_deserialization_functions(&[u8], &[Key], &[u8],\nDeserializeKvFn<K, T>, DeserializeVFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":221295,"byte_end":221304,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Prefix<K, T, B>>::range_raw","value":"pub fn range_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":221924,"byte_end":221932,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Prefix<K, T, B>>::keys_raw","value":"pub fn keys_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":222404,"byte_end":222409,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<K, T, B>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":223063,"byte_end":223067,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<K, T, B>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":223753,"byte_end":223770,"line_start":194,"line_end":194,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<RawBound>,\nOption<RawBound>, Order) -> Box<dyn Iterator<Item = Record> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246631,"byte_end":246643,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"SnapshotItem","qualname":"::snapshot::item::SnapshotItem","value":"SnapshotItem {  }","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":" Item that maintains a snapshot of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Item that maintains a snapshot of one or more checkpoints.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246444,"byte_end":246506,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246507,"byte_end":246565,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246566,"byte_end":246619,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247075,"byte_end":247078,"line_start":30,"line_end":30,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotItem>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246790,"byte_end":246802,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246807,"byte_end":246810,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246815,"byte_end":246826,"line_start":21,"line_end":21,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotItem, Strategy};","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246831,"byte_end":246881,"line_start":22,"line_end":22,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246886,"byte_end":246889,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ SnapshotItem::<'static, u64>::new(","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246894,"byte_end":246932,"line_start":24,"line_end":24,"column_start":5,"column_end":43}},{"value":"/     \"every\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246937,"byte_end":246953,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/     \"every__check\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246958,"byte_end":246981,"line_start":26,"line_end":26,"column_start":5,"column_end":28}},{"value":"/     \"every__change\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246986,"byte_end":247010,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock);","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247015,"byte_end":247045,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247050,"byte_end":247057,"line_start":29,"line_end":29,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247424,"byte_end":247438,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotItem>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247574,"byte_end":247591,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotItem>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247730,"byte_end":247739,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"changelog","qualname":"<SnapshotItem>::changelog","value":"pub fn changelog(&Self) -> Map<, u64, ChangeSet<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":248472,"byte_end":248476,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotItem>::save","value":"pub fn save(&Self, &mut dyn Storage, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":248724,"byte_end":248730,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotItem>::remove","value":"pub fn remove(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249051,"byte_end":249055,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotItem>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":248973,"byte_end":249039,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249287,"byte_end":249295,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotItem>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored if present, returns Ok(None) if no data there.\n returns an error on parsing issues\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249146,"byte_end":249232,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/ returns an error on parsing issues","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249237,"byte_end":249275,"line_start":93,"line_end":93,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249405,"byte_end":249423,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotItem>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249833,"byte_end":249852,"line_start":110,"line_end":110,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotItem>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250378,"byte_end":250384,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotItem>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result in the database.\n This is a shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result in the database.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":249982,"byte_end":250069,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ This is a shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250074,"byte_end":250145,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250150,"byte_end":250153,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250158,"byte_end":250250,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250255,"byte_end":250258,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":250263,"byte_end":250366,"line_start":119,"line_end":119,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257679,"byte_end":257690,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::map::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257492,"byte_end":257554,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257555,"byte_end":257613,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257614,"byte_end":257667,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258103,"byte_end":258106,"line_start":37,"line_end":37,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257812,"byte_end":257824,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257829,"byte_end":257832,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257837,"byte_end":257848,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotMap, Strategy};","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257853,"byte_end":257902,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257907,"byte_end":257910,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ SnapshotMap::<&[u8], &str>::new(","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257915,"byte_end":257951,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/     \"never\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257956,"byte_end":257972,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/     \"never__check\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257977,"byte_end":258000,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/     \"never__change\",","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258005,"byte_end":258029,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258034,"byte_end":258062,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258067,"byte_end":258073,"line_start":35,"line_end":35,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258078,"byte_end":258085,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258388,"byte_end":258397,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"changelog","qualname":"<SnapshotMap>::changelog","value":"pub fn changelog(&Self) -> &Map","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258625,"byte_end":258639,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258775,"byte_end":258792,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":259078,"byte_end":259081,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":259763,"byte_end":259767,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260034,"byte_end":260040,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260397,"byte_end":260401,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260302,"byte_end":260385,"line_start":107,"line_end":107,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260653,"byte_end":260661,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260501,"byte_end":260598,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260603,"byte_end":260641,"line_start":113,"line_end":113,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":260780,"byte_end":260798,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261205,"byte_end":261224,"line_start":136,"line_end":136,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261748,"byte_end":261754,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261354,"byte_end":261424,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261429,"byte_end":261515,"line_start":141,"line_end":141,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261520,"byte_end":261523,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261528,"byte_end":261620,"line_start":143,"line_end":143,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261625,"byte_end":261628,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":261633,"byte_end":261736,"line_start":145,"line_end":145,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":262512,"byte_end":262521,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<SnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":262867,"byte_end":262875,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<SnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263764,"byte_end":263776,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<SnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\nOption<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263339,"byte_end":263426,"line_start":205,"line_end":205,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263431,"byte_end":263518,"line_start":206,"line_end":206,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263523,"byte_end":263609,"line_start":207,"line_end":207,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263614,"byte_end":263633,"line_start":208,"line_end":208,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263638,"byte_end":263732,"line_start":209,"line_end":209,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263737,"byte_end":263752,"line_start":210,"line_end":210,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":264299,"byte_end":264304,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":264661,"byte_end":264665,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"keys","qualname":"<SnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c>\nwhere T: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":265016,"byte_end":265022,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":265158,"byte_end":265168,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":237948,"byte_end":237958,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":237964,"byte_end":237969,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238308,"byte_end":238316,"line_start":172,"line_end":172,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":237975,"byte_end":238053,"line_start":167,"line_end":167,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238058,"byte_end":238112,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238117,"byte_end":238120,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238125,"byte_end":238210,"line_start":170,"line_end":170,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238215,"byte_end":238303,"line_start":171,"line_end":171,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":237933,"byte_end":237941,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238397,"byte_end":238406,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"ChangeSet","qualname":"::snapshot::ChangeSet","value":"ChangeSet { old }","parent":null,"children":[{"krate":0,"index":2341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":238420,"byte_end":238423,"line_start":177,"line_end":177,"column_start":9,"column_end":12},"name":"old","qualname":"::snapshot::ChangeSet::old","value":"std::option::Option<T>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2273,"byte_end":2278,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3076,"byte_end":3087,"line_start":57,"line_end":57,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5221,"byte_end":5227,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5460,"byte_end":5463,"line_start":144,"line_end":144,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5941,"byte_end":5945,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":7126,"byte_end":7129,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":7641,"byte_end":7647,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":8237,"byte_end":8241,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26494,"byte_end":26504,"line_start":36,"line_end":36,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26990,"byte_end":27000,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30265,"byte_end":30275,"line_start":140,"line_end":140,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31341,"byte_end":31351,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31798,"byte_end":31808,"line_start":185,"line_end":185,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73482,"byte_end":73500,"line_start":25,"line_end":25,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74585,"byte_end":74603,"line_start":66,"line_end":66,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75505,"byte_end":75523,"line_start":98,"line_end":98,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":79012,"byte_end":79030,"line_start":189,"line_end":189,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80020,"byte_end":80038,"line_start":222,"line_end":222,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80485,"byte_end":80503,"line_start":238,"line_end":238,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112441,"byte_end":112451,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":114859,"byte_end":114869,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":115408,"byte_end":115418,"line_start":145,"line_end":145,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":115821,"byte_end":115831,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":116843,"byte_end":116853,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118813,"byte_end":118823,"line_start":250,"line_end":250,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119617,"byte_end":119627,"line_start":278,"line_end":278,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122961,"byte_end":122972,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123760,"byte_end":123771,"line_start":65,"line_end":65,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125072,"byte_end":125083,"line_start":107,"line_end":107,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125949,"byte_end":125960,"line_start":137,"line_end":137,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":126864,"byte_end":126875,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134199,"byte_end":134203,"line_start":21,"line_end":21,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134397,"byte_end":134401,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151266,"byte_end":151269,"line_start":17,"line_end":17,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151568,"byte_end":151571,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156510,"byte_end":156513,"line_start":204,"line_end":204,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156717,"byte_end":156720,"line_start":215,"line_end":215,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156837,"byte_end":156843,"line_start":221,"line_end":221,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157054,"byte_end":157060,"line_start":232,"line_end":232,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157665,"byte_end":157669,"line_start":258,"line_end":258,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157934,"byte_end":157938,"line_start":270,"line_end":270,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165670,"byte_end":165679,"line_start":14,"line_end":14,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165863,"byte_end":165872,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165979,"byte_end":165988,"line_start":29,"line_end":29,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166167,"byte_end":166170,"line_start":38,"line_end":38,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166356,"byte_end":166365,"line_start":45,"line_end":45,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166675,"byte_end":166684,"line_start":60,"line_end":60,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166886,"byte_end":166895,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":168724,"byte_end":168727,"line_start":28,"line_end":28,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169027,"byte_end":169030,"line_start":42,"line_end":42,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171450,"byte_end":171453,"line_start":115,"line_end":115,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171928,"byte_end":171931,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173060,"byte_end":173063,"line_start":161,"line_end":161,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":174241,"byte_end":174244,"line_start":196,"line_end":196,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":175050,"byte_end":175053,"line_start":229,"line_end":229,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216175,"byte_end":216179,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216327,"byte_end":216331,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220142,"byte_end":220148,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220331,"byte_end":220337,"line_start":64,"line_end":64,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":221177,"byte_end":221183,"line_start":97,"line_end":97,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1362},{"krate":0,"index":1367},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246764,"byte_end":246776,"line_start":18,"line_end":18,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247909,"byte_end":247921,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257784,"byte_end":257795,"line_start":24,"line_end":24,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258501,"byte_end":258512,"line_start":54,"line_end":54,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258937,"byte_end":258948,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":262225,"byte_end":262236,"line_start":165,"line_end":165,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263228,"byte_end":263239,"line_start":200,"line_end":200,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":233300,"byte_end":233308,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":234265,"byte_end":234273,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":2273,"byte_end":2278,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3076,"byte_end":3087,"line_start":57,"line_end":57,"column_start":27,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3587,"byte_end":3597,"line_start":74,"line_end":74,"column_start":24,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":907},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":3604,"byte_end":3609,"line_start":74,"line_end":74,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5221,"byte_end":5227,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5460,"byte_end":5463,"line_start":144,"line_end":144,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/bound.rs","byte_start":5941,"byte_end":5945,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":20,"index":2967},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":7126,"byte_end":7129,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":102}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":7641,"byte_end":7647,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":102}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/de.rs","byte_start":8237,"byte_end":8241,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":20,"index":2967},"to":{"krate":0,"index":102}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17796,"byte_end":17801,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":172}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/endian.rs","byte_start":17804,"byte_end":17808,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":172}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26494,"byte_end":26504,"line_start":36,"line_end":36,"column_start":19,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":26990,"byte_end":27000,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":30265,"byte_end":30275,"line_start":140,"line_end":140,"column_start":19,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31341,"byte_end":31351,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_map.rs","byte_start":31798,"byte_end":31808,"line_start":185,"line_end":185,"column_start":19,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":73482,"byte_end":73500,"line_start":25,"line_end":25,"column_start":19,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":74585,"byte_end":74603,"line_start":66,"line_end":66,"column_start":19,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":75505,"byte_end":75523,"line_start":98,"line_end":98,"column_start":19,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":79012,"byte_end":79030,"line_start":189,"line_end":189,"column_start":19,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80020,"byte_end":80038,"line_start":222,"line_end":222,"column_start":19,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexed_snapshot.rs","byte_start":80485,"byte_end":80503,"line_start":238,"line_end":238,"column_start":19,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":112441,"byte_end":112451,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":114859,"byte_end":114869,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":782}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":115408,"byte_end":115418,"line_start":145,"line_end":145,"column_start":21,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":115821,"byte_end":115831,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":116843,"byte_end":116853,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":118813,"byte_end":118823,"line_start":250,"line_end":250,"column_start":21,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/multi.rs","byte_start":119617,"byte_end":119627,"line_start":278,"line_end":278,"column_start":21,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":122961,"byte_end":122972,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":123760,"byte_end":123771,"line_start":65,"line_end":65,"column_start":34,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":782}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125072,"byte_end":125083,"line_start":107,"line_end":107,"column_start":21,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":125949,"byte_end":125960,"line_start":137,"line_end":137,"column_start":21,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/indexes/unique.rs","byte_start":126864,"byte_end":126875,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130031,"byte_end":130036,"line_start":8,"line_end":8,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":790}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/int_key.rs","byte_start":130039,"byte_end":130043,"line_start":8,"line_end":8,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":790}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134199,"byte_end":134203,"line_start":21,"line_end":21,"column_start":13,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/item.rs","byte_start":134397,"byte_end":134401,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151266,"byte_end":151269,"line_start":17,"line_end":17,"column_start":26,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":151568,"byte_end":151571,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":152491,"byte_end":152496,"line_start":55,"line_end":55,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":907}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156510,"byte_end":156513,"line_start":204,"line_end":204,"column_start":29,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":907}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156717,"byte_end":156720,"line_start":215,"line_end":215,"column_start":27,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":956}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":156837,"byte_end":156843,"line_start":221,"line_end":221,"column_start":29,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":907}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157054,"byte_end":157060,"line_start":232,"line_end":232,"column_start":27,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":956}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157665,"byte_end":157669,"line_start":258,"line_end":258,"column_start":29,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":20,"index":2967},"to":{"krate":0,"index":907}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys.rs","byte_start":157934,"byte_end":157938,"line_start":270,"line_end":270,"column_start":27,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":20,"index":2967},"to":{"krate":0,"index":956}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165670,"byte_end":165679,"line_start":14,"line_end":14,"column_start":17,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165863,"byte_end":165872,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":165979,"byte_end":165988,"line_start":29,"line_end":29,"column_start":35,"column_end":44},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166167,"byte_end":166170,"line_start":38,"line_end":38,"column_start":40,"column_end":43},"kind":{"Impl":{"id":104}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166356,"byte_end":166365,"line_start":45,"line_end":45,"column_start":48,"column_end":57},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":907}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166675,"byte_end":166684,"line_start":60,"line_end":60,"column_start":38,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":956}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/keys_old.rs","byte_start":166886,"byte_end":166895,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":168724,"byte_end":168727,"line_start":28,"line_end":28,"column_start":16,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":169027,"byte_end":169030,"line_start":42,"line_end":42,"column_start":16,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171450,"byte_end":171453,"line_start":115,"line_end":115,"column_start":16,"column_end":19},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":171928,"byte_end":171931,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":173060,"byte_end":173063,"line_start":161,"line_end":161,"column_start":16,"column_end":19},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":174241,"byte_end":174244,"line_start":196,"line_end":196,"column_start":16,"column_end":19},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/map.rs","byte_start":175050,"byte_end":175053,"line_start":229,"line_end":229,"column_start":16,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216175,"byte_end":216179,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2236},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/path.rs","byte_start":216327,"byte_end":216331,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220142,"byte_end":220148,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2246},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":220331,"byte_end":220337,"line_start":64,"line_end":64,"column_start":15,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/prefix.rs","byte_start":221177,"byte_end":221183,"line_start":97,"line_end":97,"column_start":19,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":246764,"byte_end":246776,"line_start":18,"line_end":18,"column_start":13,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/item.rs","byte_start":247909,"byte_end":247921,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":257784,"byte_end":257795,"line_start":24,"line_end":24,"column_start":16,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258501,"byte_end":258512,"line_start":54,"line_end":54,"column_start":16,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":258937,"byte_end":258948,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":262225,"byte_end":262236,"line_start":165,"line_end":165,"column_start":16,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/map.rs","byte_start":263228,"byte_end":263239,"line_start":200,"line_end":200,"column_start":16,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":233300,"byte_end":233308,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.2/src/snapshot/mod.rs","byte_start":234265,"byte_end":234273,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2260},"to":{"krate":4294967295,"index":4294967295}}]}