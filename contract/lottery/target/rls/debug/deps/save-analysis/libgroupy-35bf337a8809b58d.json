{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1","program":"/Users/gyu/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","groupy","--edition=2018","/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=35bf337a8809b58d","-C","extra-filename=-35bf337a8809b58d","--out-dir","/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps","-L","dependency=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps","--extern","fff=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libfff-a9724528e9b7a48b.rmeta","--extern","rand=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/librand-3948719c44e2a97b.rmeta","--extern","rand_xorshift=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/librand_xorshift-1bd775d083f1e264.rmeta","--extern","thiserror=/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libthiserror-0683540f85d8c969.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/gyu/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/gyu/project/beb-03-ball93/contract/target/rls/debug/deps/libgroupy-35bf337a8809b58d.rmeta"},"prelude":{"crate_id":{"name":"groupy","disambiguator":[656871807472780624,0]},"crate_root":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src","external_crates":[{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":20,"id":{"name":"fff","disambiguator":[13890297088356131274,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":21,"id":{"name":"fff_derive","disambiguator":[11681560740793598463,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[13000368750798225955,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[5256209661575371231,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[10690845834420505743,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":26,"id":{"name":"byteorder","disambiguator":[16549712766347989126,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":27,"id":{"name":"rand","disambiguator":[12438868606324389773,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":28,"id":{"name":"rand_chacha","disambiguator":[15526149038947678179,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":29,"id":{"name":"ppv_lite86","disambiguator":[5856322367314168531,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/tests/mod.rs","num":30,"id":{"name":"rand_xorshift","disambiguator":[15462005087075174750,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":31,"id":{"name":"thiserror","disambiguator":[6061701602899434971,0]}},{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","num":32,"id":{"name":"thiserror_impl","disambiguator":[2945859382556524683,0]}}],"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":54,"byte_end":6243,"line_start":2,"line_end":172,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":252,"byte_end":256,"line_start":11,"line_end":11,"column_start":21,"column_end":25},"alias_span":null,"name":"Wnaf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":54,"byte_end":6243,"line_start":2,"line_end":172,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":74},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":141},{"krate":0,"index":157},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":184}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":54,"byte_end":97,"line_start":2,"line_end":2,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/tests/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tests","qualname":"::tests","value":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/tests/mod.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":72}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/tests/mod.rs","byte_start":6396,"byte_end":6407,"line_start":7,"line_end":7,"column_start":8,"column_end":19},"name":"curve_tests","qualname":"::tests::curve_tests","value":"pub fn curve_tests<G: CurveProjective>()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20167,"byte_end":20171,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"Wnaf","qualname":"::wnaf::Wnaf","value":"Wnaf {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":" A \"w-ary non-adjacent form\" exponentiation context.\n","sig":null,"attributes":[{"value":"/ A \"w-ary non-adjacent form\" exponentiation context.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20083,"byte_end":20138,"line_start":75,"line_end":75,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20356,"byte_end":20359,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new wNAF context without allocating.\n","sig":null,"attributes":[{"value":"/ Construct a new wNAF context without allocating.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20292,"byte_end":20344,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20655,"byte_end":20659,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"base","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::base","value":"pub fn base(&mut Self, G, usize) -> Wnaf<usize, &[G], &mut Vec<i64>>","parent":null,"children":[],"decl_id":null,"docs":" Given a base and a number of scalars, compute a window table and return a `Wnaf` object that\n can perform exponentiations with `.scalar(..)`.\n","sig":null,"attributes":[{"value":"/ Given a base and a number of scalars, compute a window table and return a `Wnaf` object that","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20491,"byte_end":20587,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ can perform exponentiations with `.scalar(..)`.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20592,"byte_end":20643,"line_start":94,"line_end":94,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":21454,"byte_end":21460,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::scalar","value":"pub fn scalar(&mut Self, <<G as CurveProjective>::Scalar as PrimeField>::Repr)\n-> Wnaf<usize, &mut Vec<G>, &[i64]>","parent":null,"children":[],"decl_id":null,"docs":" Given a scalar, compute its wNAF representation and return a `Wnaf` object that can perform\n exponentiations with `.base(..)`.\n","sig":null,"attributes":[{"value":"/ Given a scalar, compute its wNAF representation and return a `Wnaf` object that can perform","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":21305,"byte_end":21400,"line_start":111,"line_end":111,"column_start":5,"column_end":100}},{"value":"/ exponentiations with `.base(..)`.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":21405,"byte_end":21442,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22352,"byte_end":22358,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"shared","qualname":"<Wnaf<usize, &'a [G], &'a mut Vec<i64>>>::shared","value":"pub fn shared(&Self) -> Wnaf<usize, &'a [G], Vec<i64>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new space for the scalar representation while borrowing\n the computed window table, for sending the window table across threads.\n","sig":null,"attributes":[{"value":"/ Constructs new space for the scalar representation while borrowing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22190,"byte_end":22260,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ the computed window table, for sending the window table across threads.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22265,"byte_end":22340,"line_start":135,"line_end":135,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22789,"byte_end":22795,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"shared","qualname":"<Wnaf<usize, &'a mut Vec<G>, &'a [i64]>>::shared","value":"pub fn shared(&Self) -> Wnaf<usize, Vec<G>, &'a [i64]>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new space for the window table while borrowing\n the computed scalar representation, for sending the scalar representation\n across threads.\n","sig":null,"attributes":[{"value":"/ Constructs new space for the window table while borrowing","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22610,"byte_end":22671,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/ the computed scalar representation, for sending the scalar representation","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22676,"byte_end":22753,"line_start":147,"line_end":147,"column_start":5,"column_end":82}},{"value":"/ across threads.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22758,"byte_end":22777,"line_start":148,"line_end":148,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23077,"byte_end":23081,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"base","qualname":"<Wnaf<usize, B, S>>::base","value":"pub fn base<G: CurveProjective>(&mut Self, G) -> G where B: AsMut<Vec<G>>","parent":null,"children":[],"decl_id":null,"docs":" Performs exponentiation given a base.\n","sig":null,"attributes":[{"value":"/ Performs exponentiation given a base.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23024,"byte_end":23065,"line_start":159,"line_end":159,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23408,"byte_end":23414,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Wnaf<usize, B, S>>::scalar","value":"pub fn scalar<G: CurveProjective>(&mut Self,\n<<G as CurveProjective>::Scalar as PrimeField>::Repr) -> G where B: AsRef<[G]>","parent":null,"children":[],"decl_id":null,"docs":" Performs exponentiation given a scalar.\n","sig":null,"attributes":[{"value":"/ Performs exponentiation given a scalar.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23353,"byte_end":23396,"line_start":170,"line_end":170,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":384,"byte_end":399,"line_start":15,"line_end":15,"column_start":11,"column_end":26},"name":"CurveProjective","qualname":"::CurveProjective","value":"CurveProjective: PartialEq + Eq + Sized + Copy + Clone + Send + Sync + fmt::Debug +\nfmt::Display + 'static","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Projective representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Projective representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":259,"byte_end":332,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":333,"byte_end":373,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":506,"byte_end":512,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Engine","qualname":"::CurveProjective::Engine","value":"type Engine: ScalarEngine<Fr = Self::Scalar>;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":556,"byte_end":562,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::CurveProjective::Scalar","value":"type Scalar: PrimeField + SqrtField;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":597,"byte_end":601,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Base","qualname":"::CurveProjective::Base","value":"type Base: SqrtField;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":623,"byte_end":629,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Affine","qualname":"::CurveProjective::Affine","value":"type Affine: CurveAffine<Projective = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":775,"byte_end":781,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"random","qualname":"::CurveProjective::random","value":"pub fn random<R: RngCore>(&mut R) -> Self","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random using a user-provided RNG.\n","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":691,"byte_end":767,"line_start":23,"line_end":23,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":863,"byte_end":867,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"zero","qualname":"::CurveProjective::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":821,"byte_end":855,"line_start":26,"line_end":26,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":942,"byte_end":945,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"one","qualname":"::CurveProjective::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":884,"byte_end":934,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1024,"byte_end":1031,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::CurveProjective::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Determines if this point is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the point at infinity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":962,"byte_end":1016,"line_start":32,"line_end":32,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1153,"byte_end":1172,"line_start":37,"line_end":37,"column_start":8,"column_end":27},"name":"batch_normalization","qualname":"::CurveProjective::batch_normalization","value":"pub fn batch_normalization<S: std::borrow::BorrowMut<Self>>(&mut [S])","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Normalizes a slice of projective elements so that\n conversion to affine is cheap.\n","sig":null,"attributes":[{"value":"/ Normalizes a slice of projective elements so that","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1053,"byte_end":1106,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/ conversion to affine is cheap.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1111,"byte_end":1145,"line_start":36,"line_end":36,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1333,"byte_end":1346,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_normalized","qualname":"::CurveProjective::is_normalized","value":"pub fn is_normalized(&Self) -> bool","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Checks if the point is already \"normalized\" so that\n cheap affine conversion is possible.\n","sig":null,"attributes":[{"value":"/ Checks if the point is already \"normalized\" so that","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1225,"byte_end":1280,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/ cheap affine conversion is possible.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1285,"byte_end":1325,"line_start":40,"line_end":40,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1401,"byte_end":1407,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"double","qualname":"::CurveProjective::double","value":"pub fn double(&mut Self)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1368,"byte_end":1393,"line_start":43,"line_end":43,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1474,"byte_end":1484,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"add_assign","qualname":"::CurveProjective::add_assign","value":"pub fn add_assign(&mut Self, &Self)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Adds another element to this element.\n","sig":null,"attributes":[{"value":"/ Adds another element to this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1425,"byte_end":1466,"line_start":46,"line_end":46,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1572,"byte_end":1582,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"::CurveProjective::sub_assign","value":"pub fn sub_assign(&mut Self, &Self)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Subtracts another element from this element.\n","sig":null,"attributes":[{"value":"/ Subtracts another element from this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1516,"byte_end":1564,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1755,"byte_end":1771,"line_start":57,"line_end":57,"column_start":8,"column_end":24},"name":"add_assign_mixed","qualname":"::CurveProjective::add_assign_mixed","value":"pub fn add_assign_mixed(&mut Self, &Self::Affine)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Adds an affine element to this element.\n","sig":null,"attributes":[{"value":"/ Adds an affine element to this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1704,"byte_end":1747,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1844,"byte_end":1850,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"negate","qualname":"::CurveProjective::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1811,"byte_end":1836,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1927,"byte_end":1937,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"::CurveProjective::mul_assign","value":"pub fn mul_assign<S: Into<<Self::Scalar as PrimeField>::Repr>>(&mut Self, S)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Performs scalar multiplication of this element.\n","sig":null,"attributes":[{"value":"/ Performs scalar multiplication of this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":1868,"byte_end":1919,"line_start":62,"line_end":62,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2075,"byte_end":2086,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"into_affine","qualname":"::CurveProjective::into_affine","value":"pub fn into_affine(&Self) -> Self::Affine","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2010,"byte_end":2067,"line_start":65,"line_end":65,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2240,"byte_end":2267,"line_start":70,"line_end":70,"column_start":8,"column_end":35},"name":"recommended_wnaf_for_scalar","qualname":"::CurveProjective::recommended_wnaf_for_scalar","value":"pub fn recommended_wnaf_for_scalar(<Self::Scalar as PrimeField>::Repr)\n-> usize","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Recommends a wNAF window table size given a scalar. Always returns a number\n between 2 and 22, inclusive.\n","sig":null,"attributes":[{"value":"/ Recommends a wNAF window table size given a scalar. Always returns a number","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2116,"byte_end":2195,"line_start":68,"line_end":68,"column_start":5,"column_end":84}},{"value":"/ between 2 and 22, inclusive.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2200,"byte_end":2232,"line_start":69,"line_end":69,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2491,"byte_end":2523,"line_start":74,"line_end":74,"column_start":8,"column_end":40},"name":"recommended_wnaf_for_num_scalars","qualname":"::CurveProjective::recommended_wnaf_for_num_scalars","value":"pub fn recommended_wnaf_for_num_scalars(usize) -> usize","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Recommends a wNAF window size given the number of scalars you intend to multiply\n a base by. Always returns a number between 2 and 22, inclusive.\n","sig":null,"attributes":[{"value":"/ Recommends a wNAF window size given the number of scalars you intend to multiply","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2327,"byte_end":2411,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"/ a base by. Always returns a number between 2 and 22, inclusive.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2416,"byte_end":2483,"line_start":73,"line_end":73,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2562,"byte_end":2566,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"hash","qualname":"::CurveProjective::hash","value":"pub fn hash(&[u8]) -> Self","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2712,"byte_end":2723,"line_start":81,"line_end":81,"column_start":11,"column_end":22},"name":"CurveAffine","qualname":"::CurveAffine","value":"CurveAffine: Copy + Clone + Sized + Send + Sync + fmt::Debug + fmt::Display + PartialEq +\nEq + 'static","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2591,"byte_end":2660,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2661,"byte_end":2701,"line_start":80,"line_end":80,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":142},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2830,"byte_end":2836,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Engine","qualname":"::CurveAffine::Engine","value":"type Engine: ScalarEngine<Fr = Self::Scalar>;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2880,"byte_end":2886,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::CurveAffine::Scalar","value":"type Scalar: PrimeField + SqrtField;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2921,"byte_end":2925,"line_start":86,"line_end":86,"column_start":10,"column_end":14},"name":"Base","qualname":"::CurveAffine::Base","value":"type Base: SqrtField;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2947,"byte_end":2957,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"name":"Projective","qualname":"::CurveAffine::Projective","value":"type Projective: CurveProjective<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3023,"byte_end":3035,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"name":"Uncompressed","qualname":"::CurveAffine::Uncompressed","value":"type Uncompressed: EncodedPoint<Affine = Self>;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":147},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3075,"byte_end":3085,"line_start":89,"line_end":89,"column_start":10,"column_end":20},"name":"Compressed","qualname":"::CurveAffine::Compressed","value":"type Compressed: EncodedPoint<Affine = Self>;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3163,"byte_end":3167,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"zero","qualname":"::CurveAffine::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3121,"byte_end":3155,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3242,"byte_end":3245,"line_start":95,"line_end":95,"column_start":8,"column_end":11},"name":"one","qualname":"::CurveAffine::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3184,"byte_end":3234,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3363,"byte_end":3370,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::CurveAffine::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3262,"byte_end":3328,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3333,"byte_end":3355,"line_start":98,"line_end":98,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3425,"byte_end":3431,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"negate","qualname":"::CurveAffine::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3392,"byte_end":3417,"line_start":101,"line_end":101,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3528,"byte_end":3531,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"mul","qualname":"::CurveAffine::mul","value":"pub fn mul<S: Into<<Self::Scalar as PrimeField>::Repr>>(&Self, S)\n-> Self::Projective","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Performs scalar multiplication of this element with mixed addition.\n","sig":null,"attributes":[{"value":"/ Performs scalar multiplication of this element with mixed addition.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3449,"byte_end":3520,"line_start":104,"line_end":104,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3685,"byte_end":3700,"line_start":108,"line_end":108,"column_start":8,"column_end":23},"name":"into_projective","qualname":"::CurveAffine::into_projective","value":"pub fn into_projective(&Self) -> Self::Projective","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3620,"byte_end":3677,"line_start":107,"line_end":107,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3848,"byte_end":3863,"line_start":112,"line_end":112,"column_start":8,"column_end":23},"name":"into_compressed","qualname":"::CurveAffine::into_compressed","value":"pub fn into_compressed(&Self) -> Self::Compressed","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Converts this element into its compressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its compressed encoding, so long as it's not","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3734,"byte_end":3809,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ the point at infinity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3814,"byte_end":3840,"line_start":111,"line_end":111,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4083,"byte_end":4100,"line_start":118,"line_end":118,"column_start":8,"column_end":25},"name":"into_uncompressed","qualname":"::CurveAffine::into_uncompressed","value":"pub fn into_uncompressed(&Self) -> Self::Uncompressed","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Converts this element into its uncompressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its uncompressed encoding, so long as it's not","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":3967,"byte_end":4044,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ the point at infinity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4049,"byte_end":4075,"line_start":117,"line_end":117,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4296,"byte_end":4308,"line_start":124,"line_end":124,"column_start":11,"column_end":23},"name":"EncodedPoint","qualname":"::EncodedPoint","value":"EncodedPoint: Sized + Send + Sync + AsRef<[u8]> + AsMut<[u8]> + Clone + Copy + 'static","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" An encoded elliptic curve point, which should essentially wrap a `[u8; N]`.\n","sig":null,"attributes":[{"value":"/ An encoded elliptic curve point, which should essentially wrap a `[u8; N]`.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4206,"byte_end":4285,"line_start":123,"line_end":123,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4398,"byte_end":4404,"line_start":127,"line_end":127,"column_start":10,"column_end":16},"name":"Affine","qualname":"::EncodedPoint::Affine","value":"type Affine: CurveAffine;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4468,"byte_end":4473,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"empty","qualname":"::EncodedPoint::empty","value":"pub fn empty() -> Self","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Creates an empty representation.\n","sig":null,"attributes":[{"value":"/ Creates an empty representation.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4424,"byte_end":4460,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4562,"byte_end":4566,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"size","qualname":"::EncodedPoint::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by this representation.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by this representation.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4490,"byte_end":4554,"line_start":132,"line_end":132,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4704,"byte_end":4715,"line_start":137,"line_end":137,"column_start":8,"column_end":19},"name":"into_affine","qualname":"::EncodedPoint::into_affine","value":"pub fn into_affine(&Self) -> Result<Self::Affine, GroupDecodingError>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Converts an `EncodedPoint` into a `CurveAffine` element,\n if the encoding represents a valid element.\n","sig":null,"attributes":[{"value":"/ Converts an `EncodedPoint` into a `CurveAffine` element,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4584,"byte_end":4644,"line_start":135,"line_end":135,"column_start":5,"column_end":65}},{"value":"/ if the encoding represents a valid element.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4649,"byte_end":4696,"line_start":136,"line_end":136,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5118,"byte_end":5139,"line_start":146,"line_end":146,"column_start":8,"column_end":29},"name":"into_affine_unchecked","qualname":"::EncodedPoint::into_affine_unchecked","value":"pub fn into_affine_unchecked(&Self)\n-> Result<Self::Affine, GroupDecodingError>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Converts an `EncodedPoint` into a `CurveAffine` element,\n without guaranteeing that the encoding represents a valid\n element. This is useful when the caller knows the encoding is\n valid already.","sig":null,"attributes":[{"value":"/ Converts an `EncodedPoint` into a `CurveAffine` element,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4773,"byte_end":4833,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ without guaranteeing that the encoding represents a valid","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4838,"byte_end":4899,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/ element. This is useful when the caller knows the encoding is","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4904,"byte_end":4969,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/ valid already.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4974,"byte_end":4992,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4997,"byte_end":5000,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If the encoding is invalid, this can break API invariants,","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5005,"byte_end":5067,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/ so caution is strongly encouraged.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5072,"byte_end":5110,"line_start":145,"line_end":145,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5315,"byte_end":5326,"line_start":150,"line_end":150,"column_start":8,"column_end":19},"name":"from_affine","qualname":"::EncodedPoint::from_affine","value":"pub fn from_affine(Self::Affine) -> Self","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Creates an `EncodedPoint` from an affine point, as long as the\n point is not the point at infinity.\n","sig":null,"attributes":[{"value":"/ Creates an `EncodedPoint` from an affine point, as long as the","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5197,"byte_end":5263,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ point is not the point at infinity.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5268,"byte_end":5307,"line_start":149,"line_end":149,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5604,"byte_end":5614,"line_start":158,"line_end":158,"column_start":5,"column_end":15},"name":"NotOnCurve","qualname":"::GroupDecodingError::NotOnCurve","value":"GroupDecodingError::NotOnCurve","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" The coordinate(s) do not lie on the curve.\n","sig":null,"attributes":[{"value":"/ The coordinate(s) do not lie on the curve.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5499,"byte_end":5545,"line_start":156,"line_end":156,"column_start":5,"column_end":51}},{"value":"error(\"coordinate(s) do not lie on the curve\")","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5550,"byte_end":5599,"line_start":157,"line_end":157,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5740,"byte_end":5753,"line_start":161,"line_end":161,"column_start":5,"column_end":18},"name":"NotInSubgroup","qualname":"::GroupDecodingError::NotInSubgroup","value":"GroupDecodingError::NotInSubgroup","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" The element is not part of the r-order subgroup.\n","sig":null,"attributes":[{"value":"/ The element is not part of the r-order subgroup.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5620,"byte_end":5672,"line_start":159,"line_end":159,"column_start":5,"column_end":57}},{"value":"error(\"the element is not part of an r-order subgroup\")","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5677,"byte_end":5735,"line_start":160,"line_end":160,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5863,"byte_end":5886,"line_start":165,"line_end":165,"column_start":5,"column_end":28},"name":"CoordinateDecodingError","qualname":"::GroupDecodingError::CoordinateDecodingError","value":"GroupDecodingError::CoordinateDecodingError(&'static str, PrimeFieldDecodingError)","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" One of the coordinates could not be decoded\n","sig":null,"attributes":[{"value":"/ One of the coordinates could not be decoded","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5760,"byte_end":5807,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"error(\"coordinate(s) could not be decoded\")","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5812,"byte_end":5858,"line_start":164,"line_end":164,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":6070,"byte_end":6095,"line_start":168,"line_end":168,"column_start":5,"column_end":30},"name":"UnexpectedCompressionMode","qualname":"::GroupDecodingError::UnexpectedCompressionMode","value":"GroupDecodingError::UnexpectedCompressionMode","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" The compression mode of the encoded element was not as expected\n","sig":null,"attributes":[{"value":"/ The compression mode of the encoded element was not as expected","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5941,"byte_end":6008,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"error(\"encoding has unexpected compression mode\")","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":6013,"byte_end":6065,"line_start":167,"line_end":167,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":6219,"byte_end":6240,"line_start":171,"line_end":171,"column_start":5,"column_end":26},"name":"UnexpectedInformation","qualname":"::GroupDecodingError::UnexpectedInformation","value":"GroupDecodingError::UnexpectedInformation","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" The encoding contained bits that should not have been set\n","sig":null,"attributes":[{"value":"/ The encoding contained bits that should not have been set","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":6101,"byte_end":6162,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"error(\"encoding has unexpected information\")","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":6167,"byte_end":6214,"line_start":170,"line_end":170,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":176},"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5474,"byte_end":5492,"line_start":155,"line_end":155,"column_start":10,"column_end":28},"name":"GroupDecodingError","qualname":"::GroupDecodingError","value":"pub enum GroupDecodingError {\n    NotOnCurve,\n    NotInSubgroup,\n    CoordinateDecodingError(&'static str, PrimeFieldDecodingError),\n    UnexpectedCompressionMode,\n    UnexpectedInformation,\n}","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":196}],"decl_id":null,"docs":" An error that may occur when trying to decode an `EncodedPoint`.\n","sig":null,"attributes":[{"value":"/ An error that may occur when trying to decode an `EncodedPoint`.","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":5361,"byte_end":5429,"line_start":153,"line_end":153,"column_start":1,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20259,"byte_end":20263,"line_start":83,"line_end":83,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22145,"byte_end":22149,"line_start":133,"line_end":133,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22565,"byte_end":22569,"line_start":145,"line_end":145,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23000,"byte_end":23004,"line_start":158,"line_end":158,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23329,"byte_end":23333,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":214,"byte_end":219,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":22}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":20259,"byte_end":20263,"line_start":83,"line_end":83,"column_start":26,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22145,"byte_end":22149,"line_start":133,"line_end":133,"column_start":30,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":22565,"byte_end":22569,"line_start":145,"line_end":145,"column_start":30,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23000,"byte_end":23004,"line_start":158,"line_end":158,"column_start":26,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/wnaf.rs","byte_start":23329,"byte_end":23333,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":405,"byte_end":414,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2709},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":417,"byte_end":419,"line_start":16,"line_end":16,"column_start":17,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":422,"byte_end":427,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":430,"byte_end":434,"line_start":16,"line_end":16,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":437,"byte_end":442,"line_start":16,"line_end":16,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":445,"byte_end":449,"line_start":16,"line_end":16,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":452,"byte_end":456,"line_start":16,"line_end":16,"column_start":52,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":464,"byte_end":469,"line_start":16,"line_end":16,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":477,"byte_end":484,"line_start":16,"line_end":16,"column_start":77,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":9694},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2729,"byte_end":2733,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2736,"byte_end":2741,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2744,"byte_end":2749,"line_start":82,"line_end":82,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2752,"byte_end":2756,"line_start":82,"line_end":82,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2759,"byte_end":2763,"line_start":82,"line_end":82,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2771,"byte_end":2776,"line_start":82,"line_end":82,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2784,"byte_end":2791,"line_start":82,"line_end":82,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":9694},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2794,"byte_end":2803,"line_start":82,"line_end":82,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2709},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":2806,"byte_end":2808,"line_start":82,"line_end":82,"column_start":82,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4314,"byte_end":4319,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4322,"byte_end":4326,"line_start":125,"line_end":125,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4329,"byte_end":4333,"line_start":125,"line_end":125,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4336,"byte_end":4341,"line_start":125,"line_end":125,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2954},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4350,"byte_end":4355,"line_start":125,"line_end":125,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2957},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4364,"byte_end":4369,"line_start":125,"line_end":125,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/gyu/.cargo/registry/src/github.com-1ecc6299db9ec823/groupy-0.3.1/src/lib.rs","byte_start":4372,"byte_end":4376,"line_start":125,"line_end":125,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":157}}]}